name: Build

on:
  push:
    branches:
      - master
  pull_request:

env:
  FLYTE_SDK_LOGGING_LEVEL: 10 # debug

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.11"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements files
          key: ${{ format('{0}-pip-{1}', runner.os, hashFiles('dev-requirements.in', 'requirements.in')) }}
      - name: Install dependencies
        run: |
          make setup && pip freeze
      - name: Test with coverage
        run: |
          make unit_test_codecov
      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch the code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.in') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.in
      - name: Lint
        run: |
          make lint
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: boilerplate

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch the code
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip==21.2.4 setuptools wheel
          pip install -r doc-requirements.txt
      - name: Build the documentation
        run: |
          # TODO: Remove after buf migration is done and packages updated
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python make -C docs html
